SKShader	sk_shader.html#SKShader	sk_shader: SKShader	
dispose	sk_shader.html#dispose,SKShader	sk_shader: dispose(s: SKShader)	
newLinearGradient	sk_shader.html#newLinearGradient,SKPoint,SKPoint,openArray[SKColor],openArray[float],SKShaderTileMode	sk_shader: newLinearGradient(startp, endp: SKPoint; colors: openArray[SKColor];\n                  colorPos: openArray[float]; tileMode: SKShaderTileMode): SKShader	
newLinearGradient	sk_shader.html#newLinearGradient,SKPoint,SKPoint,openArray[SKColor],SKShaderTileMode	sk_shader: newLinearGradient(startp, endp: SKPoint; colors: openArray[SKColor];\n                  tileMode: SKShaderTileMode): SKShader	
newRadialGradient	sk_shader.html#newRadialGradient,SKPoint,float,openArray[SKColor],openArray[float],SKShaderTileMode	sk_shader: newRadialGradient(center: SKPoint; radius: float; colors: openArray[SKColor];\n                  colorPos: openArray[float]; tileMode: SKShaderTileMode): SKShader	
newSweepGradient	sk_shader.html#newSweepGradient,SKPoint,float,openArray[SKColor],openArray[float],SKShaderTileMode,float,float	sk_shader: newSweepGradient(center: SKPoint; radius: float; colors: openArray[SKColor];\n                 colorPos: openArray[float]; tileMode: SKShaderTileMode;\n                 startAngle, endAngle: float): SKShader	
newSweepGradient	sk_shader.html#newSweepGradient,SKPoint,float,openArray[SKColor],SKShaderTileMode,float,float	sk_shader: newSweepGradient(center: SKPoint; radius: float; colors: openArray[SKColor];\n                 tileMode: SKShaderTileMode; startAngle, endAngle: float): SKShader	
newTwoPointConicalGradient	sk_shader.html#newTwoPointConicalGradient,SKPoint,float,SKPoint,float,openArray[SKColor],openArray[float],SKShaderTileMode	sk_shader: newTwoPointConicalGradient(start: SKPoint; startRadius: float; `end`: SKPoint;\n                           endRadius: float; colors: openArray[SKColor];\n                           colorPos: openArray[float]; tileMode: SKShaderTileMode): SKShader	
newPerlinNoiseFractal	sk_shader.html#newPerlinNoiseFractal,float,float,int,float,SKPointI	sk_shader: newPerlinNoiseFractal(baseFrequencyX, baseFrequencyY: float; numOctaves: int;\n                      seed: float; tileSize: SKPointI): SKShader	
newPerlinNoiseFractal	sk_shader.html#newPerlinNoiseFractal,float,float,int,float	sk_shader: newPerlinNoiseFractal(baseFrequencyX, baseFrequencyY: float; numOctaves: int;\n                      seed: float): SKShader	
newPerlinNoiseTurbolence	sk_shader.html#newPerlinNoiseTurbolence,float,float,int,float,SKPointI	sk_shader: newPerlinNoiseTurbolence(baseFrequencyX, baseFrequencyY: float; numOctaves: int;\n                         seed: float; tileSize: SKPointI): SKShader	
newPerlinNoiseTurbolence	sk_shader.html#newPerlinNoiseTurbolence,float,float,int,float	sk_shader: newPerlinNoiseTurbolence(baseFrequencyX, baseFrequencyY: float; numOctaves: int;\n                         seed: float): SKShader	
compose	sk_shader.html#compose,SKShader,SKShader	sk_shader: compose(a, b: SKShader): SKShader	
compose	sk_shader.html#compose,SKShader,SKShader,SKBlendMode	sk_shader: compose(a, b: SKShader; mode: SKBlendMode): SKShader	
